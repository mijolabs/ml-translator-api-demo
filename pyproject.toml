[project]
name = "ml-translator-api-demo"
version = "0.1.0"
description = """
A proof-of-concept API for language detection and translation using machine learning models.
"""
readme = "README.md"
requires-python = ">=3.13"

dependencies = [
    "fastapi>=0.115.11",
    "fasttext-wheel>=0.9.2",
    "httptools>=0.6.4",
    "nltk>=3.9.1",
    "numpy<2.0.0", # Ensure compatibility with fasttext
    "orjson>=3.10.15",
    "sacremoses>=0.1.1",
    "sentencepiece>=0.2.0",
    "torch>=2.7.1",
    "transformers>=4.53.0",
    "uvicorn>=0.34.0",
    "uvloop>=0.21.0",
]

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pytest-asyncio>=0.25.3",
    "pytest>=8.3.5",
    "pytest-cov>=6.0.0",
]

[tool.uv]
python-downloads = "manual"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
omit = ["*_test.py"]

[tool.coverage.report]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    ]

[tool.ruff]
target-version = "py313"
line-length = 100
src = ["src"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".terraform",
    ".tox",
    ".venv",
    ".vscode",
    "__pycache__",
    "__pypackages__",
    "_build",
    "buck-out",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint] # https://docs.astral.sh/ruff/rules
select = [
    "COM818",   # Trailing comma on bare tuple prohibited
    "DTZ",      # flake8-datetimez
    "E4",       # pycodestyle errors
    "E7",       # pycodestyle errors
    "E9",       # pycodestyle errors
    "F",        # pyflakes
    "I",        # isort
    "INP001",   # implicit-namespace-package
    "N",        # pep8-naming
    "S",        # flake8-bandit
    "UP",       # pyupgrade
    "W",        # pycodestyle warnings
]
ignore = [
    "S104",     # Possible binding to all interfaces
    "W191",     # Indentation contains tabs (rule is made redundant by formatter)
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"    # Allow unused variables when underscore-prefixed.

[tool.ruff.lint.per-file-ignores]
# https://github.com/astral-sh/ruff/issues/4368
"**/*_test.py" = [
    "S101", # asserts allowed in tests
    "ARG",  # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT",  # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
]

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.ruff.format]
skip-magic-trailing-comma = false
line-ending = "lf"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
docstring-code-format = true
docstring-code-line-length = "dynamic"
